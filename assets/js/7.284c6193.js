(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{352:function(t,a,e){"use strict";e.r(a);var s=e(43),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),e("h3",{attrs:{id:"property-和-attribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#property-和-attribute"}},[t._v("#")]),t._v(" property 和 attribute")]),t._v(" "),e("p",[t._v("property：修改对象属性，不会体现到html结构中")]),t._v(" "),e("p",[t._v("attribute：修改html属性，会改变html结构")]),t._v(" "),e("h3",{attrs:{id:"事件绑定的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定的方式"}},[t._v("#")]),t._v(" 事件绑定的方式")]),t._v(" "),e("p",[t._v("嵌入dom")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<button onclick="func()">按钮</button>\n')])])]),e("p",[t._v("直接绑定")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("btn.onclick = function(){}\n")])])]),e("p",[t._v("事件监听")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("btn.addEventListener('click',function(){},false)  一般是false只冒泡\nbtn.attachEvent('click',handle)\n")])])]),e("h3",{attrs:{id:"dom事件流与事件委托（代理）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom事件流与事件委托（代理）"}},[t._v("#")]),t._v(" DOM事件流与事件委托（代理）")]),t._v(" "),e("p",[e("strong",[t._v("DOM事件流")])]),t._v(" "),e("p",[t._v("当事件发生在某个DOM节点上时，事件在DOM结构中进行一级一级的传递，这便形成了“流”，事件流便描述了从页面中接收事件的顺序。")]),t._v(" "),e("p",[e("strong",[t._v("捕获与冒泡")])]),t._v(" "),e("p",[t._v("在捕获阶段，事件由"),e("code",[t._v("window")]),t._v("对象开始，一级一级地向下传递，直到传递到最具体的"),e("code",[t._v("button")]),t._v("对象上。")]),t._v(" "),e("p",[t._v("事件冒泡阶段与捕获阶段恰好相反，冒泡阶段是从最具体的目标对象开始，一层一层地向上传递，直到"),e("code",[t._v("window")]),t._v("对象。")]),t._v(" "),e("p",[e("strong",[t._v("事件委托")])]),t._v(" "),e("p",[t._v("事件委托又叫事件代理，就是利用"),e("strong",[t._v("事件冒泡")]),t._v("，只指定一个事件处理程序，就可以管理某一类型的所有事件。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("ul"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行某个函数")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("bug 在于，如果用户点击的是 li 里面的 span，就没法触发 fn，这显然不对。")]),t._v(" "),e("p",[t._v("高级版：点击 span 后，递归遍历 span 的祖先元素看其中有没有 ul 里面的 li。")]),t._v(" "),e("p",[e("strong",[t._v("很好记忆的例子：")])]),t._v(" "),e("p",[t._v("简单说，事件委托就是把本来该自己接收的事件委托给自己的上级（父级，祖父级等等）的某个节点，让自己的“长辈们”帮忙盯着，一旦有事件触发，再由“长辈们”告诉自己：“喂，孙子，有人找你~~”。\n恩，差不多就是这么个意思，可怜天下父母心。")]),t._v(" "),e("h3",{attrs:{id:"js操作dom的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js操作dom的方法"}},[t._v("#")]),t._v(" JS操作DOM的方法")]),t._v(" "),e("blockquote",[e("p",[t._v("创建新节点")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("createDocumentFragment() // 创建一个DOM片段\ncreateElement() // 创建一个具体的元素\ncreateTextNode() // 创建一个文本节点\n")])])]),e("blockquote",[e("p",[t._v("添加、移除、替换、插入")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("appendChild()\nremoveChild()\nreplaceChild()\ninsertBefore() // 在已有的子节点前插入一个新的子节点\n")])])]),e("blockquote",[e("p",[t._v("查找")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("getElementsByTagName() // 通过标签名称\ngetElementsByName() // 通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)\ngetElementById() // 通过元素Id，唯一性\n")])])]),e("h3",{attrs:{id:"dom-tree与render-tree之间的区别是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-tree与render-tree之间的区别是什么"}},[t._v("#")]),t._v(" DOM Tree与Render Tree之间的区别是什么?")]),t._v(" "),e("p",[t._v("Dom Tree 包含了所有的HTMl标签，包括display：none ，JS动态添加的元素等。")]),t._v(" "),e("p",[t._v("Dom Tree 和样式结构体结合后构建呈现Render Tree。Render Tree 能识别样式，每个node都有自己的style，且不包含隐藏的节点（比如display : none的节点）。")])])}),[],!1,null,null,null);a.default=n.exports}}]);