(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{358:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" Webpack")]),t._v(" "),s("h3",{attrs:{id:"webpack介绍一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack介绍一下"}},[t._v("#")]),t._v(" Webpack介绍一下")]),t._v(" "),s("p",[t._v("webpack是一个"),s("strong",[t._v("模块打包器")]),t._v("（module bundler），webpack视HTML，JS，CSS，图片等文件都是一种 "),s("strong",[t._v("资源")]),t._v(" ，每个资源文件都是一个模块（module）文件，webpack就是根据每个模块文件之间的依赖关系将所有的模块打包（bundle）起来。")]),t._v(" "),s("p",[s("strong",[t._v("webpack的构建流程")])]),t._v(" "),s("ol",[s("li",[t._v("初始化：启动构建，读取与合并配置参数，加载 Plugin，实例化 编译器Compiler。")]),t._v(" "),s("li",[t._v("编译：从 入口Entry 发出，针对每个模块Module 串行调用对应的 Loader 去翻译文件内容，再找到该 Module 依赖的 Module，递归地进行编译处理。")]),t._v(" "),s("li",[t._v("输出：对编译后的 模块（Module） 组合成 代码块（Chunk），把 Chunk 转换成文件，输出到文件系统。")])]),t._v(" "),s("p",[t._v("Webpack在启动后，会从Entry开始，递归解析Entry依赖的所有Module，每找到一个Module，就会根据Module.rules里配置的Loader规则进行相应的转换处理，对Module进行转换后，再解析出当前Module依赖的Module，这些Module会以Entry为单位进行分组，即为一个Chunk。**因此一个Chunk，就是一个Entry及其所有依赖的Module合并的结果。**最后Webpack会将所有的Chunk转换成文件输出Output。在整个构建流程中，Webpack会在恰当的时机执行Plugin里定义的逻辑，从而完成Plugin插件的优化任务。")]),t._v(" "),s("p",[t._v("https://juejin.im/entry/6844903614469636103")]),t._v(" "),s("p",[s("strong",[t._v("作用")])]),t._v(" "),s("ul",[s("li",[t._v("对 CommonJS 、 AMD 、ES6的语法做了兼容")]),t._v(" "),s("li",[t._v("对js、css、图片等资源文件都支持打包（适合团队化开发）")]),t._v(" "),s("li",[t._v("比方你写一个js文件，另外一个人也写一个js文件，需要合并很麻烦，现在交给webpack合并很简单")]),t._v(" "),s("li",[t._v("有独立的配置文件webpack.config.js")]),t._v(" "),s("li",[t._v("可以将代码切割成不同的chunk，实现按需加载，降低了初始化时间")]),t._v(" "),s("li",[t._v("具有强大的Plugin（插件）接口，大多是内部插件，使用起来比较灵活")]),t._v(" "),s("li",[t._v("……")])]),t._v(" "),s("h3",{attrs:{id:"前端模块化的了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端模块化的了解"}},[t._v("#")]),t._v(" 前端模块化的了解")]),t._v(" "),s("h4",{attrs:{id:"什么是模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是模块化"}},[t._v("#")]),t._v(" 什么是模块化")]),t._v(" "),s("ul",[s("li",[t._v("将一个复杂的程序依据一定的规则(规范)封装成几个块(文件), 并进行组合在一起")]),t._v(" "),s("li",[t._v("块的内部数据与实现是私有的, 只是向外部暴露一些接口(方法)与外部其它模块通信")])]),t._v(" "),s("h4",{attrs:{id:"模块化的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化的好处"}},[t._v("#")]),t._v(" 模块化的好处")]),t._v(" "),s("ul",[s("li",[t._v("避免命名冲突(减少命名空间污染)")]),t._v(" "),s("li",[t._v("更好的分离, 按需加载")]),t._v(" "),s("li",[t._v("更高复用性")]),t._v(" "),s("li",[t._v("高可维护性")])]),t._v(" "),s("p",[t._v("我们需要重点掌握的是"),s("strong",[t._v("ES6")]),t._v("和"),s("strong",[t._v("CommonJS")]),t._v("，AMD与CMD只需了解，现在我们实际开发中已经基本不会用到了。")]),t._v(" "),s("h4",{attrs:{id:"commonjs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" commonjs")]),t._v(" "),s("p",[s("strong",[t._v("CommonJS是服务器端的js模块化规范，由NodeJS实现。")])]),t._v(" "),s("blockquote",[s("p",[t._v("通过module.exports导出模块")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" addX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同时导出多个")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  addX\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("通过require导入模块")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" example "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./example.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n")])])]),s("h4",{attrs:{id:"es6模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6模块化"}},[t._v("#")]),t._v(" "),s("strong",[t._v("ES6模块化")])]),t._v(" "),s("p",[t._v("ES6推出了自己的模块化规范，使用export和import来进行导出和导入。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Michael'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jackson'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" year "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1958")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./profile.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("补充")]),t._v(" "),s("p",[s("code",[t._v("export default")]),t._v("命令用于指定模块的默认输出。显然，一个模块只能有一个默认输出，因此"),s("code",[t._v("export default")]),t._v("命令只能使用一次。所以，import命令后面才不用加大括号，因为只可能唯一对应"),s("code",[t._v("export default")]),t._v("命令。")]),t._v(" "),s("h3",{attrs:{id:"commonjs模块与es6模块的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs模块与es6模块的区别"}},[t._v("#")]),t._v(" CommonJS模块与ES6模块的区别")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("CommonJS")]),t._v(" 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")])])]),t._v(" "),s("p",[s("code",[t._v("CommonJS")]),t._v("输出的值的拷贝，第一次加载模块时会缓存该模块，并且加载该模块时，即使改变输入的值，也不会对原模块内部的变量造成影响。而ES6 模块输出的是值的引用，引入该模块修改输入的变量时，会对原模块内部的变量有影响！")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("ES6模块化导入是异步导入，CommonJS导入是同步导入。")])])]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("CommonJS")]),t._v(" 模块是运行时加载，"),s("code",[t._v("ES6")]),t._v(" 模块是编译时输出接口。")])])]),t._v(" "),s("p",[s("code",[t._v("CommonJS")]),t._v(" 模块是运行时加载，只有执行到"),s("code",[t._v("require")]),t._v("时才会加载该模块，而"),s("code",[t._v("import")]),t._v("引入"),s("code",[t._v("ES6")]),t._v(" 模块是在编译阶段执行，在代码执行之前就已经拿到输入变量。")]),t._v(" "),s("p",[t._v("当使用require命令加载同一个模块时，不会再执行该模块，而是取到缓存之中的值。")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/unclekeith/archive/2017/10/17/7679503.html")]),t._v(" "),s("h3",{attrs:{id:"amd与cmd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amd与cmd"}},[t._v("#")]),t._v(" AMD与CMD")]),t._v(" "),s("ul",[s("li",[t._v("AMD是 RequireJS 在推广过程中对模块定义的规范化产出。")]),t._v(" "),s("li",[t._v("CMD是 SeaJS 在推广过程中对模块定义的规范化产出。")]),t._v(" "),s("li",[t._v("CMD推崇"),s("strong",[t._v("依赖就近")]),t._v("，AMD推崇"),s("strong",[t._v("依赖前置")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("AMD")]),t._v("在加载模块完成后就会执行模块，所有模块都加载执行完后会进入require的回调函数，执行主逻辑，依赖模块的执行顺序和书写顺序不一定一致")]),t._v(" "),s("p",[s("strong",[t._v("CMD")]),t._v("加载完某个依赖模块后并不执行，只是下载而已，在所有依赖模块加载完成后进入主逻辑，遇到require语句的时候才执行对应的模块，这样模块的执行顺序和书写顺序是完全一致的")]),t._v(" "),s("h3",{attrs:{id:"有哪些常见的loader-他们是解决什么问题的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的loader-他们是解决什么问题的？"}},[t._v("#")]),t._v(" 有哪些常见的Loader?他们是解决什么问题的？")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("file-loader")]),t._v("：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件")]),t._v(" "),s("li",[s("strong",[t._v("url-loader")]),t._v("：和 file-loader 类似，但是能在文件很小的情况下以 base64 的方式把文件内容注入到代码中去")]),t._v(" "),s("li",[s("strong",[t._v("css-loader")]),t._v("：加载 CSS，支持模块化、压缩、文件导入等特性")]),t._v(" "),s("li",[s("strong",[t._v("sass-loader")])]),t._v(" "),s("li",[s("strong",[t._v("style-loader")]),t._v("：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。")]),t._v(" "),s("li",[s("strong",[t._v("image-loader")]),t._v("：加载并且压缩图片文件")]),t._v(" "),s("li",[s("strong",[t._v("babel-loader")]),t._v("：把 ES6 转换成 ES5")]),t._v(" "),s("li",[s("strong",[t._v("eslint-loader")]),t._v("：通过 ESLint 检查 JavaScript 代码")])]),t._v(" "),s("h3",{attrs:{id:"有哪些常见的plugin？他们是解决什么问题的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的plugin？他们是解决什么问题的？"}},[t._v("#")]),t._v(" 有哪些常见的Plugin？他们是解决什么问题的？")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("html-webpack-plugin")]),t._v("：简单创建HTML文件，用于服务器访问")]),t._v(" "),s("li",[s("strong",[t._v("define-plugin")]),t._v("：定义环境变量")]),t._v(" "),s("li",[s("strong",[t._v("commons-chunk-plugin")]),t._v("：提取公共代码")]),t._v(" "),s("li",[s("strong",[t._v("uglifyjs-webpack-plugin")]),t._v("：通过"),s("code",[t._v("UglifyES")]),t._v("压缩"),s("code",[t._v("ES6")]),t._v("代码")])]),t._v(" "),s("h3",{attrs:{id:"loader和plugin的不同？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loader和plugin的不同？"}},[t._v("#")]),t._v(" Loader和Plugin的不同？")]),t._v(" "),s("p",[t._v("loader译为加载器，主要用于加载资源文件，webpack默认只支持加载js文件，使用loader可以实现css,less等文件的资源转化")]),t._v(" "),s("p",[t._v("plugin主要用于拓展webpack的功能，例如打包压缩，定义环境变量等功能")]),t._v(" "),s("p",[s("strong",[t._v("不同的作用")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Loader")]),t._v('直译为"加载器"。Webpack将一切文件视为模块，但是webpack原生是只能解析js文件，如果想将其他文件也打包的话，就会用到'),s("code",[t._v("loader")]),t._v("。 所以Loader的作用是"),s("strong",[t._v("让webpack拥有了加载和解析"),s("em",[t._v("非JavaScript文件")]),t._v("的能力")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("Plugin")]),t._v('直译为"插件"。Plugin可以'),s("strong",[t._v("扩展webpack的功能")]),t._v("，让webpack具有更多的灵活性。 在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。")])]),t._v(" "),s("p",[s("strong",[t._v("不同的用法")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Loader")]),t._v("在"),s("code",[t._v("module.rules")]),t._v("中配置，也就是说他作为模块的解析规则而存在。 类型为数组，每一项都是一个"),s("code",[t._v("Object")]),t._v("，里面描述了对于什么类型的文件（"),s("code",[t._v("test")]),t._v("），使用什么加载("),s("code",[t._v("loader")]),t._v(")和使用的参数（"),s("code",[t._v("options")]),t._v("）")]),t._v(" "),s("li",[s("strong",[t._v("Plugin")]),t._v("在"),s("code",[t._v("plugins")]),t._v("中单独配置。 类型为数组，每一项是一个"),s("code",[t._v("plugin")]),t._v("的实例，参数都通过构造函数传入。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);