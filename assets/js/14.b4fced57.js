(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{360:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"原生js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生js"}},[t._v("#")]),t._v(" 原生JS")]),t._v(" "),a("h3",{attrs:{id:"es6-语法知道哪些，分别怎么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-语法知道哪些，分别怎么用"}},[t._v("#")]),t._v(" ES6 语法知道哪些，分别怎么用")]),t._v(" "),a("p",[t._v("https://fangyinghang.com/es-6-tutorials/")]),t._v(" "),a("p",[t._v("let const 展开运算符 解构赋值 模块导入导出 class继承 promise symbol,set数据类型")]),t._v(" "),a("h3",{attrs:{id:"es6中数组的新方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6中数组的新方法"}},[t._v("#")]),t._v(" ES6中数组的新方法")]),t._v(" "),a("p",[t._v("1、扩展运算符 ..."),a("br"),t._v("\n2、Array.from()"),a("br"),t._v("\n3、Array,of()    "),a("code",[t._v("Array.of")]),t._v("方法用于将一组值，转换为数组。     Array.of(3, 11, 8) // [3,11,8]"),a("br"),t._v("\n4、fill() 填充数组"),a("br"),t._v("\n5、find() 和 findindex()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[1, 4, -5, 10].find((n) => n < 0)\n// -5\n")])])]),a("p",[t._v("6、includes()   返回一个布尔值，表示某个数组是否包含给定的值")]),t._v(" "),a("p",[t._v("7、entries()  /keys()  /values()")]),t._v(" "),a("h3",{attrs:{id:"var、let-及-const-区别（相当于变量提升题目）⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var、let-及-const-区别（相当于变量提升题目）⭐"}},[t._v("#")]),t._v(" var、let 及 const 区别（相当于变量提升题目）⭐")]),t._v(" "),a("p",[t._v("以下需要记牢（五点）：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("var声明的变量会挂载在window上，而let和const声明的变量不会")])]),t._v(" "),a("li",[a("p",[t._v("var声明变量存在变量提升，let和const不存在变量提升")]),t._v(" "),a("p",[a("strong",[t._v("块级作用域+不允许重复声明+暂存死区")])])]),t._v(" "),a("li",[a("p",[t._v("let和const声明形成块作用域，而var不存在此作用域")])]),t._v(" "),a("li",[a("p",[t._v("同一作用域下let和const不能声明同名变量，而var可以")])]),t._v(" "),a("li",[a("p",[t._v("let、const存在暂存死区")])])]),t._v(" "),a("p",[t._v("const 定义的基本数据类型的变量不能修改，但引用类型可以修改指向的内容，但不能修改指针指向")]),t._v(" "),a("p",[t._v("JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。")]),t._v(" "),a("p",[t._v("JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("ul",[a("li",[t._v("函数提升优先于变量提升，函数提升会把整个函数挪到作用域顶部，变量提升只会把声明挪到作用域顶部")]),t._v(" "),a("li",[a("code",[t._v("var")]),t._v(" 存在提升，我们能在声明之前使用。"),a("code",[t._v("let")]),t._v("、"),a("code",[t._v("const")]),t._v(" 因为暂时性死区的原因，不能在声明前使用")]),t._v(" "),a("li",[a("code",[t._v("var")]),t._v(" 在全局作用域下声明变量会导致变量挂载在 "),a("code",[t._v("window")]),t._v(" 上，其他两者不会")]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 作用基本一致，但是后者声明的变量不能再次赋值")])]),t._v(" "),a("p",[t._v("为什么要变量提升")]),t._v(" "),a("p",[t._v("1、提高性能，让函数可以在执行时预先为变量分配栈空间")]),t._v(" "),a("p",[t._v("在JS代码执行之前，会进行语法检查和预编译，并且这一操作只进行一次。这么做就是为了提高性能，如果没有这一步，那么每次执行代码前都必须重新解析一遍该变量（函数），而这是没有必要的，因为变量（函数）的代码并不会改变，解析一遍就够了。")]),t._v(" "),a("p",[t._v("2、声明提升还可以提高JS代码的容错性，使一些不规范的代码也可以正常执行")]),t._v(" "),a("p",[t._v("为什么要使用let")]),t._v(" "),a("ul",[a("li",[t._v("let 不会在全局对象中新建一个属性")]),t._v(" "),a("li",[t._v("在处理构造函数的时候，可以通过"),a("code",[t._v("let")]),t._v("声明而不是闭包来创建一个或多个私有成员。")]),t._v(" "),a("li",[t._v("更好的报错机制，在同一个函数或块作用域中重复声明同一个变量会引起"),a("code",[t._v("SyntaxError")])])]),t._v(" "),a("h3",{attrs:{id:"为什么0-1-0-2！-0-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么0-1-0-2！-0-3"}},[t._v("#")]),t._v(" 为什么0.1+0.2！==0.3")]),t._v(" "),a("p",[t._v("因为 0.1 和 0.2 被转成二进制后会无限循环，由于JS中位数的限制多余的位数会被截掉，就出现了精度损失。\n解决方法："),a("strong",[t._v("toFixed()，toFixed() 方法可把 Number 四舍五入为指定小数位数的数字。")])]),t._v(" "),a("h3",{attrs:{id:"与-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-的区别"}},[t._v("#")]),t._v(" ==与===的区别")]),t._v(" "),a("p",[t._v('"==" 就代表会先把两端的变量试图转换成相同类型，然后再比较；')]),t._v(" "),a("p",[t._v('"===" 就代表会直接去比较类型是否相同，如果类型相同则继续比较值是否相同。')]),t._v(" "),a("p",[t._v("==操作符的强制类型转换规则，看看就好")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("（1）字符串和数字之间的相等比较，将字符串转换为数字之后再进行比较。\n\n（2）其他类型和布尔类型之间的相等比较，先将布尔值转换为数字后，再应用其他规则进行比较。\n\n（3）null 和 undefined 之间的相等比较，结果为真。其他值和它们进行比较都返回假值。\n\n（4）对象和非对象之间的相等比较，对象先调用 ToPrimitive 抽象操作后，再进行比较。\n\n（5）如果一个操作值为 NaN ，则相等比较返回 false（ NaN 本身也不等于 NaN ）。\n\n（6）如果两个操作值都是对象，则比较它们是不是指向同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回 true，否则，返回 false。\n")])])]),a("h3",{attrs:{id:"null与undefined区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null与undefined区别"}},[t._v("#")]),t._v(" null与undefined区别")]),t._v(" "),a("p",[t._v('**null表示"没有对象"，即该处不应该有值。**典型用法是：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("（1） 作为函数的参数，表示该函数的参数不是对象。\n\n（2） 作为对象原型链的终点。\n")])])]),a("p",[t._v('**undefined表示"缺少值"，就是此处应该有一个值，但是还没有定义。**典型用法是：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("（1）变量被声明了，但没有赋值时，就等于undefined。\n\n（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。\n\n（3）对象没有赋值的属性，该属性的值为undefined。\n\n（4）函数没有返回值时，默认返回undefined。\n")])])]),a("p",[t._v("摘自阮一峰：")]),t._v(" "),a("p",[t._v("https://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html")]),t._v(" "),a("p",[t._v("undefined !== null  //true\nundefined == null  //true")]),t._v(" "),a("h3",{attrs:{id:"map、weakmap、set、weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map、weakmap、set、weakset"}},[t._v("#")]),t._v(" Map、WeakMap、Set、WeakSet")]),t._v(" "),a("p",[a("strong",[t._v("Set")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("成员不能重复，成员可以使任意类型的值")])]),t._v(" "),a("li",[a("p",[t._v("只有健值，没有健名，有点类似数组。")])]),t._v(" "),a("li",[a("p",[t._v("可以遍历，方法有add, delete，has")])])]),t._v(" "),a("p",[a("strong",[t._v("WeakSet")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("成员只能是对象")])]),t._v(" "),a("li",[a("p",[t._v("成员都是弱引用，垃圾回收机制不考虑WeakSet对该对象的引用")])]),t._v(" "),a("li",[a("p",[t._v("不能遍历，方法有add, delete,has")])])]),t._v(" "),a("p",[a("strong",[t._v("Map")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("本质上是健值对的集合，类似集合，可以接受任何类型的值作为键名")])]),t._v(" "),a("li",[a("p",[t._v("可以遍历，方法很多，可以干跟各种数据格式转换")])])]),t._v(" "),a("p",[a("strong",[t._v("WeakMap")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("只接受对象作为健名（null除外），不接受其他类型的值作为健名")])]),t._v(" "),a("li",[a("p",[t._v("健名所指向的对象，不计入垃圾回收机制")])]),t._v(" "),a("li",[a("p",[t._v("不能遍历，方法同get,set,has,delete")])])]),t._v(" "),a("h3",{attrs:{id:"javascript-中-map-和-object-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中-map-和-object-的区别"}},[t._v("#")]),t._v(" JavaScript 中 Map 和 Object 的区别")]),t._v(" "),a("p",[t._v("1：Object对象有原型， 也就是说他有默认的key值在对象上面， 除非我们使用Object.create(null)创建一个没有原型的对象\n2：在Object对象中， 只能把String和Symbol作为key值， 但是在Map中，key值可以是任何基本类型的值或者对象\n3：通过Map中的size属性， 可以很方便地获取到Map长度， 要获取Object的长度， 你只能用别的方法了")]),t._v(" "),a("p",[t._v("https://blog.csdn.net/liangchuannan/article/details/70053038")]),t._v(" "),a("h3",{attrs:{id:"javascript数组的迭代方法map-filter。。。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript数组的迭代方法map-filter。。。"}},[t._v("#")]),t._v(" JavaScript数组的迭代方法map,filter。。。")]),t._v(" "),a("p",[t._v("map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果。")]),t._v(" "),a("p",[t._v("forEach() 方法对数组的每个元素执行一次提供的函数。")]),t._v(" "),a("p",[t._v("some() 和 every() 方法不会改变原始数组。")]),t._v(" "),a("h3",{attrs:{id:"js的数据类型及存放位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型及存放位置"}},[t._v("#")]),t._v(" JS的数据类型及存放位置")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Number")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("string")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Boolean")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Null")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Undefined")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Symbol")]),t._v("（ES6中新引入的新类型---可以用来创建匿名的对象属性，代表创建后独一无二且不可变的数据类型，它的出现我认为主要是为了解决可能出现的全局变量冲突的问题。）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("BigInt")]),t._v("（它可以表示任意精度格式的整数）")]),t._v(" "),a("p",[t._v("原始类型存储的都是值，是没有函数可以调用的，"),a("code",[t._v("typeof null")]),t._v("会输出"),a("code",[t._v("object")]),t._v("，是JS存在的一个bug")])])]),t._v(" "),a("p",[t._v("（一共有8种数据类型，其中7种是原始类型）")]),t._v(" "),a("p",[t._v("栈：原始数据类型（Undefined、Null、Boolean、Number、String）")]),t._v(" "),a("p",[t._v("堆：引用数据类型（对象、数组和函数）\nstring：基本包装类型")]),t._v(" "),a("h3",{attrs:{id:"javascript中的几个假值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的几个假值"}},[t._v("#")]),t._v(" javascript中的几个假值")]),t._v(" "),a("p",[a("strong",[t._v("false,null,undefined,0,”(空字符串),NaN")])]),t._v(" "),a("h3",{attrs:{id:"基本类型跟引用类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型跟引用类型的区别"}},[t._v("#")]),t._v(" 基本类型跟引用类型的区别")]),t._v(" "),a("p",[t._v("**声明变量时不同的内存分配：**一个在栈，一个堆")]),t._v(" "),a("p",[a("strong",[t._v("不同的内存分配机制也带来了不同的访问机制")]),t._v("：原始类型可以直接访问，引用类型按引用访问")]),t._v(" "),a("p",[a("strong",[t._v("复制变量时的不同")]),t._v("：基本类型复制出独立数据，引用类型复制的一个指针")]),t._v(" "),a("h3",{attrs:{id:"判断数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断数据类型"}},[t._v("#")]),t._v(" 判断数据类型")]),t._v(" "),a("p",[a("strong",[t._v("typeof（原始数据类型）")])]),t._v(" "),a("p",[t._v("它返回表示数据类型的"),a("strong",[t._v("字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n")])])]),a("p",[t._v('**注释：**您也许会问，为什么 typeof 运算符对于 null 值会返回 "object"。这实际上是 JavaScript 最初实现中的一个错误，然后被 ECMAScript 沿用了。现在，null 被认为是对象的占位符，从而解释了这一矛盾，但从技术上来说，它仍然是原始值。')]),t._v(" "),a("p",[a("strong",[t._v("instanceof（引用类型）")])]),t._v(" "),a("p",[t._v("原理 因为A instanceof B 可以判断A是不是B的实例，返回一个"),a("strong",[t._v("布尔值")]),t._v("，由构造类型判断出数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意： instanceof 后面一定要是对象类型，大小写不能写错，该方法试用一些条件选择或分支")]),t._v("\n")])])]),a("p",[a("strong",[t._v("缺点")])]),t._v(" "),a("p",[t._v("instanceof检测的是原型，不能完全精确的判断object类的具体数据类型，比如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("console.log([] instanceof Object)   //true\nconsole.log([] instanceof Array)    //true\n")])])]),a("p",[a("strong",[t._v("使用"),a("code",[t._v("Object.prototype.toString.call()")]),t._v("来判断值的类型")])]),t._v(" "),a("p",[t._v("可以"),a("strong",[t._v("通用")]),t._v("的来判断原始数据类型和引用数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Object]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Function]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/name/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object RegExp]")]),t._v("\n")])])]),a("p",[t._v("而对于基本类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object String]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Number]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Boolean]")]),t._v("\n")])])]),a("p",[t._v("基本类型值是没有构造函数的，为什么也能返回构造函数名呢？这是因为在"),a("code",[t._v("toString")]),t._v("被调用时 JavaScript 将基本类型值转换成了包装类型。")]),t._v(" "),a("p",[t._v("而对于"),a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Null]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Undefined]"')]),t._v("\n")])])]),a("p",[t._v("虽然 JavaScript 中没有"),a("code",[t._v("Null()")]),t._v("和"),a("code",[t._v("Undefined")]),t._v("构造器，但是 JavaScript 也为我们处理这这两种情况。"),a("br"),t._v(" "),a("strong",[t._v("原理")])]),t._v(" "),a("p",[a("strong",[t._v("所有类在继承Object的时候，改写了toString()方法。")]),t._v(" Object原型上的方法是可以输出数据类型的。因此我们想判断数据类型时，也只能使用原始方法。继而有了此方法："),a("code",[t._v("Object.prototype.toString.call(obj)")])]),t._v(" "),a("h3",{attrs:{id:"如何理解js中基本数据类型的值不可变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何理解js中基本数据类型的值不可变"}},[t._v("#")]),t._v(" 如何理解js中基本数据类型的值不可变")]),t._v(" "),a("p",[a("strong",[t._v("在 JavaScript 中，字符串的值是不可变的，这意味着一旦字符串被创建就不能被改变")])]),t._v(" "),a("p",[t._v("栈创建的时候，大小是确定的")]),t._v(" "),a("p",[t._v("而堆的大小是不确定的，需要的话可以不断增加")]),t._v(" "),a("h3",{attrs:{id:"javascript对象的几种创建方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript对象的几种创建方式"}},[t._v("#")]),t._v(" javascript对象的几种创建方式")]),t._v(" "),a("p",[t._v("1、字面量方式  {}")]),t._v(" "),a("p",[t._v("2、调用系统的构造函数 new Object()")]),t._v(" "),a("p",[t._v("3、Object.create()也可以用于创建对象")]),t._v(" "),a("p",[t._v("4、自定义构造函数的方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"您好！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建对象---\x3e实例化一个对象，同时对属性进行初始化。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    1.开辟空间存储对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    2.把this设置为当前的对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    3.设置属性和方法的值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    4.把this对象返回")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stu3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小天"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20181113")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("5、工厂模式创建对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"您好！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stu4"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小菊"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20181114")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"女"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("工厂模式和自定义构造函数创建对象的区别：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20180622113822343?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NsZWVwd2Fsa2VyXzE5OTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"什么是原型，什么是原型链⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型，什么是原型链⭐"}},[t._v("#")]),t._v(" 什么是原型，什么是原型链⭐")]),t._v(" "),a("p",[a("strong",[t._v("原型")])]),t._v(" "),a("p",[t._v("我们创建的每个函数都有一个 "),a("code",[t._v("prototype(原型)")]),t._v(" 属性，这个属性是一个指针，指向一个原型对象。其实原型对象就只是个普通对象，里面存放着所有实例对象需要共享的属性和方法！")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不需要共享的属性和方法放在构造函数里")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'female'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//prototype属性，存放所有实例共享的属性与方法")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Summer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lily"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// female")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// female")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'male'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改prototype属性会影响它的所有实例的sex的值！！")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// male")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// male")]),t._v("\n")])])]),a("p",[a("strong",[t._v("原型链")])]),t._v(" "),a("p",[t._v("当访问一个对象的某个属性时，会先在这个对象本身属性上查找，如果没有找到，则会去它的__proto__隐式原型上查找，即它的构造函数的prototype，如果还没有找到就会再在构造函数的prototype的__proto__中查找，这样一层一层向上查找就会形成一个链式结构，我们称为原型链。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2018/png/199663/1544807307596-1e74bf82-9587-458b-bcff-62dfd57b0c87.png",alt:"img"}}),t._v('{:height="50%" width="50%"}')]),t._v(" "),a("h3",{attrs:{id:"同步异步的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步异步的区别"}},[t._v("#")]),t._v(" 同步异步的区别")]),t._v(" "),a("p",[a("strong",[t._v("异步")]),t._v("不会阻塞代码的执行，使用场景：网络请求&定时任务")]),t._v(" "),a("p",[a("strong",[t._v("同步")]),t._v("会阻塞代码执行")]),t._v(" "),a("p",[a("strong",[t._v("同步异步")])]),t._v(" "),a("p",[t._v("首先来解释同步和异步的概念，这两个概念与消息的通知机制有关。也就是同步与异步主要是从"),a("strong",[t._v("消息通知机制")]),t._v("角度来说的。")]),t._v(" "),a("p",[t._v("所谓同步就是一个任务的完成需要依赖另外一个任务时，只有等待被依赖的任务完成后，依赖的任务才能算完成，这是一种可靠的任务序列。要么成功都成功，失败都失败，两个任务的状态可以保持一致。")]),t._v(" "),a("p",[t._v("所谓异步是不需要等待被依赖的任务完成，只是通知被依赖的任务要完成什么工作，依赖的任务也立即执行，只要自己完成了整个任务就算完成了。至于被依赖的任务最终是否真正完成，依赖它的任务无法确定，所以它是不可靠的任务序列。")]),t._v(" "),a("p",[a("strong",[t._v("阻塞非阻塞")])]),t._v(" "),a("p",[t._v("阻塞和非阻塞这两个概念与"),a("strong",[t._v("程序（线程）等待消息通知(无所谓同步或者异步)时的状态")]),t._v("有关。也就是说阻塞与非阻塞主要是程序（线程）等待消息通知时的状态角度来说的。")]),t._v(" "),a("p",[t._v("阻塞调用是指调用结果返回之前，当前线程会被挂起，一直处于等待消息通知，不能够执行其他业务。函数只有在得到结果之后才会返回。")]),t._v(" "),a("h3",{attrs:{id:"异步编程方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步编程方案"}},[t._v("#")]),t._v(" 异步编程方案")]),t._v(" "),a("p",[t._v("1.JS 异步编程进化史：callback -> promise -> generator(*|yield) -> async + await")]),t._v(" "),a("p",[t._v("2."),a("strong",[t._v("async/await 函数的实现")]),t._v("，"),a("code",[t._v("async")]),t._v("函数就是将 Generator 函数的星号（"),a("code",[t._v("*")]),t._v("）替换成"),a("code",[t._v("async")]),t._v("，将"),a("code",[t._v("yield")]),t._v("替换成"),a("code",[t._v("await")]),t._v("，仅此而已。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内置执行器，不需要像generate函数，需要调用next方法")])]),t._v(" "),a("li",[a("p",[t._v("更好的语义，"),a("code",[t._v("async")]),t._v("表示函数里有异步操作，"),a("code",[t._v("await")]),t._v("表示紧跟在后面的表达式需要等待结果")])]),t._v(" "),a("li",[a("p",[t._v("更广的适用性。"),a("code",[t._v("async")]),t._v("函数的"),a("code",[t._v("await")]),t._v("命令后面，可以是 Promise 对象和原始类型的值（数值、字符串和布尔值，但这时会自动转成立即 resolved 的 Promise 对象）。")])]),t._v(" "),a("li",[a("p",[t._v("返回值是 Promise。你可以用"),a("code",[t._v("then")]),t._v("方法指定下一步的操作。")])])]),t._v(" "),a("p",[t._v("3.async/await可以说是异步终极解决方案了。")]),t._v(" "),a("h4",{attrs:{id:"promise对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise对象"}},[t._v("#")]),t._v(" promise对象")]),t._v(" "),a("ol",[a("li",[t._v("作用： 解决异步回调嵌套问题(回调地狱)，将异步的流程用同步的形式表达出来")]),t._v(" "),a("li",[t._v("思想：\n"),a("ul",[a("li",[t._v("给promise设置的三种状态： pending, fullfilled, rejected")]),t._v(" "),a("li",[t._v("通过异步任务的执行结果动态的去修改promise的状态")]),t._v(" "),a("li",[t._v("promise状态的改变可以去then方法中的成功或者失败的回调")]),t._v(" "),a("li",[t._v("可以通过resolve，reject调用的时候将数据传递给成功或者失败的回调")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化promise的状态为pending----\x3e初始化状态")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1111'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同步执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动异步任务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3333'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//resolve('atguigu.com');//修改promise的状态pending----\x3efullfilled（成功状态）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改promise的状态pending-----\x3erejected(失败状态)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'成功了。。。'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'失败了'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"generator函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator函数"}},[t._v("#")]),t._v(" Generator函数")]),t._v(" "),a("ol",[a("li",[t._v("概念：\n1、ES6提供的解决异步编程的方案之一\n2、Generator函数是一个状态机，内部封装了不同状态的数据，\n3、用来生成遍历器对象\n4、可暂停函数"),a("code",[t._v("(惰性求值)")]),t._v(","),a("code",[t._v("yield可暂停")]),t._v("，"),a("code",[t._v("next方法可启动")]),t._v("。每次返回的是yield后的表达式结果")]),t._v(" "),a("li",[t._v("特点：\n1、function 与函数名之间有一个星号\n2、内部用yield表达式来定义不同的状态\n例如：\nfunction* generatorExample(){\nlet result = yield ‘hello’; // 状态值为hello\nyield ‘generator’; // 状态值为generator\n}\n3、generator函数返回的是指针对象(iterator)，而不会执行函数内部逻辑\n4、调用next方法函数内部逻辑开始执行，遇到yield表达式停止，返回{value: yield后的表达式结果/undefined, done: false/true}\n5、再次调用next方法会从上一次停止时的yield处开始，直到最后\n6、yield语句返回结果通常为undefined， 当调用next方法时传参内容会作为启动时yield语句的返回值。 （此方法过于繁琐不推荐使用）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myGenerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'开始'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'暂停了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Mg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myGenerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需调用next重新启动，并且可以传参。")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"async函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async函数"}},[t._v("#")]),t._v(" async函数")]),t._v(" "),a("ol",[a("li",[t._v("作用: 解决异步回调")]),t._v(" "),a("li",[t._v("语法：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" 异步操作"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" 异步操作；\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",[a("li",[t._v("通常和promise配合使用，")]),t._v(" "),a("li",[t._v("async代表异步， await等待异步执行")])]),t._v(" "),a("ul",[a("li",[t._v("异步任务执行成功以后才会执行后续的代码返回的")]),t._v(" "),a("li",[t._v("根据promise实例对象的状态决定的\n注意点：awit返回值，async的返回值为Promise")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"开始执行"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"执行完毕"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"async-await-怎么用，如何捕获异常？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await-怎么用，如何捕获异常？"}},[t._v("#")]),t._v(" async/await 怎么用，如何捕获异常？")]),t._v(" "),a("p",[a("strong",[t._v("async")])]),t._v(" "),a("p",[t._v("ES2017 标准引入了 async 函数，使得异步操作变得更加方便。")]),t._v(" "),a("p",[t._v("async 函数是什么？一句话，它就是 Generator 函数的语法糖。")]),t._v(" "),a("p",[a("code",[t._v("async")]),t._v("函数就是将 Generator 函数的星号（"),a("code",[t._v("*")]),t._v("）替换成"),a("code",[t._v("async")]),t._v("，将"),a("code",[t._v("yield")]),t._v("替换成"),a("code",[t._v("await")]),t._v("，仅此而已。")]),t._v(" "),a("p",[a("strong",[t._v("await")])]),t._v(" "),a("p",[t._v("正常情况下，"),a("code",[t._v("await")]),t._v("命令后面是一个 "),a("strong",[t._v("Promise 对象")]),t._v("，返回该对象的结果。如果不是 Promise 对象，就直接返回对应的值。")]),t._v(" "),a("p",[a("code",[t._v("await")]),t._v("命令只能用在"),a("code",[t._v("async")]),t._v("函数之中，如果用在普通函数，就会报错。")]),t._v(" "),a("p",[a("code",[t._v("await")]),t._v("命令后面的"),a("code",[t._v("Promise")]),t._v("对象，运行结果可能是"),a("code",[t._v("rejected")]),t._v("，所以最好把"),a("code",[t._v("await")]),t._v("命令放在"),a("code",[t._v("try...catch")]),t._v("代码块中。")]),t._v(" "),a("h3",{attrs:{id:"promise原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise原理"}},[t._v("#")]),t._v(" Promise原理")]),t._v(" "),a("p",[t._v("阮一峰ES6中的解释：")]),t._v(" "),a("p",[t._v("Promise 是异步编程的一种解决方案，解决了回调地狱的问题")]),t._v(" "),a("p",[t._v("所谓"),a("code",[t._v("Promise")]),t._v("，简单说就是一个容器，里面保存着某个未来才会结束的事件的结果（通常是一个异步操作）。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。")]),t._v(" "),a("p",[a("strong",[t._v("特点")])]),t._v(" "),a("ul",[a("li",[t._v("对象的状态不受外界影响。"),a("code",[t._v("Promise")]),t._v("对象代表一个异步操作，有三种状态："),a("code",[t._v("pending")]),t._v("（进行中）、"),a("code",[t._v("fulfilled")]),t._v("（已成功）和"),a("code",[t._v("rejected")]),t._v("（已失败）。")]),t._v(" "),a("li",[t._v("一旦状态改变，就不会再变")])]),t._v(" "),a("p",[a("strong",[t._v("then")])]),t._v(" "),a("p",[t._v("Promise 实例具有"),a("code",[t._v("then")]),t._v("方法，也就是说，"),a("code",[t._v("then")]),t._v("方法是定义在原型对象"),a("code",[t._v("Promise.prototype")]),t._v("上的。它的作用是为 Promise 实例添加状态改变时的回调函数。前面说过，"),a("code",[t._v("then")]),t._v("方法的第一个参数是"),a("code",[t._v("resolved")]),t._v("状态的回调函数，第二个参数（可选）是"),a("code",[t._v("rejected")]),t._v("状态的回调函数。")]),t._v(" "),a("p",[a("code",[t._v("then")]),t._v("方法返回的是一个新的"),a("code",[t._v("Promise")]),t._v("实例（注意，不是原来那个"),a("code",[t._v("Promise")]),t._v("实例）。因此可以采用"),a("strong",[t._v("链式写法")]),t._v("，即"),a("code",[t._v("then")]),t._v("方法后面再调用另一个"),a("code",[t._v("then")]),t._v("方法。")]),t._v(" "),a("p",[t._v("阮一峰原文 https://es6.ruanyifeng.com/#docs/promise")]),t._v(" "),a("h3",{attrs:{id:"proxy的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy的理解"}},[t._v("#")]),t._v(" proxy的理解")]),t._v(" "),a("p",[t._v("Proxy 可以理解成，在目标对象之前架设一层**“拦截”**，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。"),a("br"),t._v("\nproxy代理，扩展（增强）对象的一些功能：比如Vue中拦截等")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//语法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被代理的对象，对代理的对象做什么操作"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhandler"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置的时候执行")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取的时候执行")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"这段代码里的-this-是什么？⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这段代码里的-this-是什么？⭐"}},[t._v("#")]),t._v(" 这段代码里的 this 是什么？⭐")]),t._v(" "),a("p",[t._v("this的值是在"),a("strong",[t._v("函数执行时")]),t._v("确定的")]),t._v(" "),a("ol",[a("li",[t._v("fn()    （比如setInterval()）\nthis => window/global")]),t._v(" "),a("li",[t._v("obj.fn()\nthis => obj")]),t._v(" "),a("li",[t._v("fn.call/apply/bind(xx)\nthis => xx")]),t._v(" "),a("li",[t._v("new Fn()\nthis => 新的对象")]),t._v(" "),a("li",[t._v("fn = ()=> {}\nthis => 外面的 this")])]),t._v(" "),a("h3",{attrs:{id:"this指向的形式4种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this指向的形式4种"}},[t._v("#")]),t._v(" this指向的形式4种")]),t._v(" "),a("p",[t._v("a.如果是一般函数,this指向全局对象window")]),t._v(" "),a("p",[t._v('b.在严格模式下"use strict",为undefined')]),t._v(" "),a("p",[t._v("c.对象的方法里调用,this指向调用该方法的对象")]),t._v(" "),a("p",[t._v("d.构造函数里的this,指向创建出来的实例")]),t._v(" "),a("p",[t._v("e.箭头函数，指向外面")]),t._v(" "),a("h3",{attrs:{id:"bind、call、apply的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind、call、apply的区别"}},[t._v("#")]),t._v(" bind、call、apply的区别")]),t._v(" "),a("p",[a("code",[t._v("call")]),t._v("和"),a("code",[t._v("apply")]),t._v("改变了函数的this上下文后便"),a("strong",[t._v("执行该函数")]),t._v("，而"),a("code",[t._v("bind")]),t._v("则是"),a("strong",[t._v("返回")]),t._v("改变了上下文后的一个"),a("strong",[t._v("函数")]),t._v("。")]),t._v(" "),a("p",[t._v("他们俩之间的差别在于参数的区别，"),a("code",[t._v("call")]),t._v("和"),a("code",[t._v("apply")]),t._v("的第一个参数都是要改变上下文的对象，而"),a("code",[t._v("call")]),t._v("从第二个参数开始以参数列表的形式展现，"),a("code",[t._v("apply")]),t._v("则是把参数放在一个数组里面作为它的第二个参数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"闭包-立即执行函数是什么？⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包-立即执行函数是什么？⭐"}},[t._v("#")]),t._v(" 闭包/立即执行函数是什么？⭐")]),t._v(" "),a("p",[a("strong",[t._v("闭包的定义")]),t._v("：其实很简单：函数 A 内部有一个函数 B，函数 B 可以访问到函数 A 中的变量，那么函数 B 就是闭包。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包隐藏数据，只提供API")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包中的数据，被隐藏，不被外接访问")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("val\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("闭包的作用")]),t._v("\n1.可以在函数外调用闭包函数，访问到函数内的变量，可以用这种方法来创建私有变量\n2.保护变量不被内存回收机制回收")]),t._v(" "),a("p",[a("strong",[t._v("闭包的缺点")]),t._v("\n闭包长期占用内存，内存消耗很大，可能导致内存泄露")]),t._v(" "),a("p",[a("strong",[t._v("立即执行函数")]),t._v("就是")]),t._v(" "),a("ol",[a("li",[t._v("声明一个匿名函数")]),t._v(" "),a("li",[t._v("马上调用这个匿名函数")])]),t._v(" "),a("p",[t._v("只有一个作用：创建一个独立的作用域。")]),t._v(" "),a("h3",{attrs:{id:"如何用正则实现-trim-？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何用正则实现-trim-？"}},[t._v("#")]),t._v(" 如何用正则实现 trim()？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\s+|\\s+$/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"垃圾回收机制⭐-有待补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制⭐-有待补充"}},[t._v("#")]),t._v(" 垃圾回收机制⭐(有待补充)")]),t._v(" "),a("p",[a("strong",[t._v("垃圾回收的意思可以理解为，将已经不需要的内存释放")]),t._v("\n一个主要的方法就是：找出用不到的对象，然后删除它")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//假设有一个对象a,占用了100m内存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*我占用了100M内存*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器就会垃圾回收掉那100m内存 什么时候回收不确定")]),t._v("\n")])])]),a("p",[a("strong",[t._v("总结来说就是：把所有指向这块内存的变量全部置为"),a("code",[t._v("null")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("什么是垃圾（没有被引用的是垃圾，如果有几个对象相互引用形成环，那也是垃圾）")])]),t._v(" "),a("li",[a("p",[t._v("如何捡垃圾（"),a("strong",[t._v("标记清除法和引用计数法")]),t._v("）")]),t._v(" "),a("p",[t._v("（遍历和计数，只是不同的算法而已）（从全局作用域开始，把所有遇到的变量都标记一下，如果这些变量引用了其他变量，那就再标记，直到早不到新的对象。标记完后将所有没有标记的对象清除掉）（另一种方法计数标记法，引用与否加1减1）")]),t._v(" "),a("p",[t._v("https://www.nowcoder.com/interview/ai/report?roomId=244768")])])]),t._v(" "),a("h3",{attrs:{id:"如何捕获js中的异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何捕获js中的异常"}},[t._v("#")]),t._v(" 如何捕获JS中的异常")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//手动捕获")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//自动捕获")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lineNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("colNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一，对于跨域的js，如cdn的，不会有详细的报错信息")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二，对于压缩的js，还要配合sourceMap反查到未压缩的代码的行列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"requestanimationframe的优势是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe的优势是什么？"}},[t._v("#")]),t._v(" requestAnimationFrame的优势是什么？")]),t._v(" "),a("p",[t._v("浏览器可以优化并行的动画动作，更合理的重新排列动作序列，并把能够合并的动作放在一个渲染周期内完成，从而呈现出更流畅的动画效果，节省CPU。\n应用场景：游戏、动画")]),t._v(" "),a("p",[t._v("告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。不需要设置时间间隔，是由系统的时间间隔定义的。大多数浏览器的刷新频率是60Hz(每秒钟反复绘制60次)，循环间隔是1000/60，约等于16.7ms。不需要调用者指定帧速率，"),a("strong",[t._v("浏览器会自行决定最佳的帧效率")]),t._v("。只被执行一次，这样就不会引起丢帧现象，也不会导致动画出现卡顿的问题。")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestanimationframe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("参数callback：下一次重绘之前更新动画帧所调用的函数")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("即上面所说的回调函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n")])])]),a("p",[a("strong",[t._v("范例")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SomeElementYouWantToAnimate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'absolute'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("step")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" progress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("progress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("progress "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"js为啥是单线程的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js为啥是单线程的"}},[t._v("#")]),t._v(" JS为啥是单线程的")]),t._v(" "),a("p",[t._v("JavaScript语言的一大特点是单线程，也就是说，"),a("strong",[t._v("同一时间只能做一件事情")]),t._v("。")]),t._v(" "),a("p",[t._v("这与它的用途有关，作为浏览器脚本语言，JavaScript 的主要用途是与用户互动，以及操作DOM，这决定了它只能是单线程，否则会带来很复杂的同步问题。")]),t._v(" "),a("p",[t._v("比如，假如JavaScript同时有两个线程，一个线程在某个DOM节点上添加了内容，而另一个线程删除了该节点，这时浏览器应该以哪个线程为准？")]),t._v(" "),a("h3",{attrs:{id:"说一下事件循环-event-loop-？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说一下事件循环-event-loop-？"}},[t._v("#")]),t._v(" 说一下事件循环(Event Loop)？")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("js")]),t._v(" 是单线程的")]),t._v("，所以一次只能执行一个任务，当一个任务需要很长时间时，主线程一直等待任务的执行完成，在执行下个任务是很浪费资源的。")]),t._v(" "),a("li",[t._v("JavaScript在处理异步操作时，利用的是"),a("strong",[t._v("事件循环机制。")])])]),t._v(" "),a("p",[a("strong",[t._v("其执行的顺序是这样的：")]),t._v("（背下来）")]),t._v(" "),a("ol",[a("li",[t._v("首先 JavaScript 引擎会执行一个宏任务，注意这个宏任务一般是指主干代码本身，也就是目前的同步代码")]),t._v(" "),a("li",[t._v("执行过程中如果遇到微任务，就把它添加到微任务任务队列中")]),t._v(" "),a("li",[t._v("宏任务执行完成后，立即执行当前微任务队列中的微任务，直到微任务队列被清空")]),t._v(" "),a("li",[t._v("微任务执行完成后，开始执行下一个宏任务")]),t._v(" "),a("li",[t._v("如此循环往复，直到宏任务和微任务被清空")])]),t._v(" "),a("p",[t._v("所以，"),a("code",[t._v("js")]),t._v("中任务就被分成两种，一种是同步任务，一种是异步任务。执行步骤如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/23/16b83ece9d14eab0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})]),t._v(" "),a("p",[t._v("为了更精细的区分任务，"),a("code",[t._v("js")]),t._v("中可以将异步任务划分为宏任务和微任务。\n"),a("strong",[t._v("宏任务（macro-task）")]),t._v(": 同步 script (整体代码)，setTimeout 回调函数, setInterval 回调函数, ajax请求回调\n"),a("strong",[t._v("微任务（micro-task）")]),t._v(": process.nextTick, Promise 回调函数，Object.observe，MutationObserver")]),t._v(" "),a("p",[t._v("Node.js也是单线程的Event Loop，但是它的运行机制不同于浏览器环境。")]),t._v(" "),a("h3",{attrs:{id:"类数组与数组的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类数组与数组的区别"}},[t._v("#")]),t._v(" 类数组与数组的区别")]),t._v(" "),a("p",[t._v("类数组是一个普通对象，真实的数组是Array类型")]),t._v(" "),a("p",[t._v("类数组拥有length属性，不具备数组所具有的方法")]),t._v(" "),a("p",[a("strong",[t._v("三种转换方法")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Array.prototype.slice.call(arrayLike)")])]),t._v(" "),a("li",[t._v("[...arrayLike]")]),t._v(" "),a("li",[t._v("Array.from(arrayLike)")])]),t._v(" "),a("h3",{attrs:{id:"箭头函数和普通函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和普通函数的区别"}},[t._v("#")]),t._v(" 箭头函数和普通函数的区别")]),t._v(" "),a("ul",[a("li",[t._v("箭头函数不会创建自己的this")]),t._v(" "),a("li",[t._v("箭头函数继承而来的this指向永远不变")]),t._v(" "),a("li",[t._v(".call()/.apply()/.bind()无法改变箭头函数中this的指向")]),t._v(" "),a("li",[t._v("箭头函数不能作为构造函数的,不能使用new")]),t._v(" "),a("li",[t._v("箭头函数不绑定arguments,取而代之用rest参数…解决")]),t._v(" "),a("li",[t._v("箭头函数没有原型属性prototype")]),t._v(" "),a("li",[t._v("箭头函数不能用作Generator函数，不能使用yeild关键字")])]),t._v(" "),a("h3",{attrs:{id:"如何判断两个数组相同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何判断两个数组相同"}},[t._v("#")]),t._v(" 如何判断两个数组相同")]),t._v(" "),a("p",[a("strong",[t._v("方法一：")])]),t._v(" "),a("p",[t._v("先排序，再利用  "),a("code",[t._v("toString()")]),t._v("  方法")]),t._v(" "),a("p",[a("strong",[t._v("方法二：")])]),t._v(" "),a("p",[t._v("借助JSON的 "),a("code",[t._v("stringify()")]),t._v(" 方法")]),t._v(" "),a("h3",{attrs:{id:"如何判断两个对象相同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何判断两个对象相同"}},[t._v("#")]),t._v(" 如何判断两个对象相同")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("deepEqual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向同一内存时")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"判断一个数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个数组"}},[t._v("#")]),t._v(" 判断一个数组")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("instanceof操作符")])]),t._v(" "),a("li",[a("p",[t._v("对象的constructor属性")])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype.toString")])]),t._v(" "),a("li",[a("p",[t._v("Array.isArray()")])])]),t._v(" "),a("h3",{attrs:{id:"js中遍历对象和遍历数组的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中遍历对象和遍历数组的方法"}},[t._v("#")]),t._v(" js中遍历对象和遍历数组的方法")]),t._v(" "),a("p",[t._v("数组：")]),t._v(" "),a("ul",[a("li",[t._v("普通for")]),t._v(" "),a("li",[t._v("forEach")]),t._v(" "),a("li",[t._v("map")]),t._v(" "),a("li",[t._v("for in")]),t._v(" "),a("li",[t._v("for of        ES6新增功能，支持数组，类数组，字符串")])]),t._v(" "),a("p",[t._v("对象")]),t._v(" "),a("ul",[a("li",[t._v("for in （主要用于遍历对象的可枚举属性，包括自有属性、继承自原型的属性）")]),t._v(" "),a("li",[t._v("Object.keys      (此方法返回一个数组，元素均为对象自有可枚举的属性)")]),t._v(" "),a("li",[t._v("Object.getOwnPropertyNames     (此方法用于返回对象的自有属性，包括可枚举和不可枚举的属性)")])]),t._v(" "),a("h3",{attrs:{id:"实现图片懒加载的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现图片懒加载的原理"}},[t._v("#")]),t._v(" 实现图片懒加载的原理")]),t._v(" "),a("p",[t._v("1.首先,不要将图片地址放到src属性中,而是放到其它属性(data-src)中")]),t._v(" "),a("p",[t._v("2.页面加载完成后,根据scrollTop判断图片是否在用户的视野内,如果在,则将data-original属性中的值取出存放到src属性中")]),t._v(" "),a("p",[t._v("3.在滚动事件中重复判断图片是否进入视野;如果进入,则将data-original属性中的值取出存放到src属性中")]),t._v(" "),a("h3",{attrs:{id:"js输出信息的5种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js输出信息的5种方式"}},[t._v("#")]),t._v(" JS输出信息的5种方式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("alert()方法\nconfirm()方法\nconlose.log()方法\ndocument.write()方法\nprompt()方法\n")])])]),a("h3",{attrs:{id:"实现数组相加的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现数组相加的方法"}},[t._v("#")]),t._v(" 实现数组相加的方法")]),t._v(" "),a("p",[t._v("方法一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function sum(arr){\n   return eval(arr.join('+'));\n}\n")])])]),a("p",[t._v("方法二：各种遍历，forEach遍历：")]),t._v(" "),a("p",[t._v("方法三：reduce")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function sumArr(arr){\n        return arr.reduce(function(prev,cur){\n            return prev + cur;\n        },0);\n}\n//reduce方法有两个参数，一个是callbackfunction(回调函数)，\n//二是设置prev的初始类型和初始值\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);